#!/usr/bin/env python3
"""
Script ki·ªÉm tra dependencies cho MeTruyenCV Downloader
"""

import sys
import os
import subprocess

def check_python_version():
    """Ki·ªÉm tra phi√™n b·∫£n Python"""
    print("üîç Ki·ªÉm tra phi√™n b·∫£n Python...")
    version = sys.version_info
    if version.major >= 3 and version.minor >= 8:
        print(f"‚úÖ Python {version.major}.{version.minor}.{version.micro} - OK")
        return True
    else:
        print(f"‚ùå Python {version.major}.{version.minor}.{version.micro} - C·∫ßn Python 3.8+")
        return False

def check_module(module_name, import_name=None):
    """Ki·ªÉm tra module Python"""
    if import_name is None:
        import_name = module_name
    
    try:
        __import__(import_name)
        print(f"‚úÖ {module_name} - OK")
        return True
    except ImportError:
        print(f"‚ùå {module_name} - Ch∆∞a c√†i ƒë·∫∑t")
        return False

def check_tesseract():
    """Ki·ªÉm tra Tesseract-OCR"""
    print("üîç Ki·ªÉm tra Tesseract-OCR...")
    tesseract_path = os.path.join(os.getcwd(), "Tesseract-OCR", "tesseract.exe")
    
    if os.path.exists(tesseract_path):
        print(f"‚úÖ Tesseract-OCR t√¨m th·∫•y t·∫°i: {tesseract_path}")
        return True
    else:
        print(f"‚ùå Tesseract-OCR kh√¥ng t√¨m th·∫•y t·∫°i: {tesseract_path}")
        print("   Vui l√≤ng t·∫£i v√† c√†i ƒë·∫∑t t·ª´: https://github.com/UB-Mannheim/tesseract/wiki")
        return False

def check_playwright_browsers():
    """Ki·ªÉm tra Playwright browsers"""
    print("üîç Ki·ªÉm tra Playwright browsers...")
    try:
        result = subprocess.run(["playwright", "install", "--dry-run"], 
                              capture_output=True, text=True, timeout=10)
        if "firefox" in result.stdout.lower():
            print("‚úÖ Playwright browsers - OK")
            return True
        else:
            print("‚ùå Playwright browsers - Ch∆∞a c√†i ƒë·∫∑t")
            print("   Ch·∫°y: playwright install firefox")
            return False
    except (subprocess.TimeoutExpired, FileNotFoundError):
        print("‚ùå Playwright - Ch∆∞a c√†i ƒë·∫∑t ho·∫∑c kh√¥ng th·ªÉ ki·ªÉm tra")
        return False

def main():
    """H√†m ch√≠nh"""
    print("=" * 50)
    print("üîß KI·ªÇM TRA DEPENDENCIES - MeTruyenCV Downloader")
    print("=" * 50)
    print()
    
    all_ok = True
    
    # Ki·ªÉm tra Python
    if not check_python_version():
        all_ok = False
    print()
    
    # Ki·ªÉm tra c√°c module Python
    print("üîç Ki·ªÉm tra Python packages...")
    modules = [
        ("httpx", "httpx"),
        ("beautifulsoup4", "bs4"),
        ("ebooklib", "ebooklib"),
        ("tqdm", "tqdm"),
        ("backoff", "backoff"),
        ("playwright", "playwright"),
        ("pytesseract", "pytesseract"),
        ("Pillow", "PIL"),
        ("appdirs", "appdirs"),
        ("async-lru", "async_lru"),
        ("lxml", "lxml")
    ]
    
    for module_name, import_name in modules:
        if not check_module(module_name, import_name):
            all_ok = False
    print()
    
    # Ki·ªÉm tra Tesseract
    if not check_tesseract():
        all_ok = False
    print()
    
    # Ki·ªÉm tra Playwright browsers
    if not check_playwright_browsers():
        all_ok = False
    print()
    
    # K·∫øt qu·∫£
    print("=" * 50)
    if all_ok:
        print("üéâ T·∫§T C·∫¢ DEPENDENCIES ƒê√É S·∫¥N S√ÄNG!")
        print("B·∫°n c√≥ th·ªÉ ch·∫°y ·ª©ng d·ª•ng b·∫±ng: python main.py ho·∫∑c python fast.py")
    else:
        print("‚ö†Ô∏è  C√ì M·ªòT S·ªê V·∫§N ƒê·ªÄ C·∫¶N KH·∫ÆC PH·ª§C")
        print("Vui l√≤ng c√†i ƒë·∫∑t c√°c dependencies b·ªã thi·∫øu v√† ch·∫°y l·∫°i script n√†y.")
        print("Ho·∫∑c ch·∫°y setup.bat ƒë·ªÉ t·ª± ƒë·ªông c√†i ƒë·∫∑t.")
    print("=" * 50)
    
    return all_ok

if __name__ == "__main__":
    try:
        success = main()
        input("\nNh·∫•n Enter ƒë·ªÉ tho√°t...")
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n\n‚ùå ƒê√£ h·ªßy b·ªüi ng∆∞·ªùi d√πng")
        sys.exit(1)
